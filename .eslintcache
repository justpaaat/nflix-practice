[{"/Users/patrick/Desktop/netflix/src/index.js":"1","/Users/patrick/Desktop/netflix/src/app.js":"2","/Users/patrick/Desktop/netflix/src/components/jumbotron/index.js":"3","/Users/patrick/Desktop/netflix/src/components/jumbotron/styles/jumbotron.js":"4","/Users/patrick/Desktop/netflix/src/global-styles.js":"5","/Users/patrick/Desktop/netflix/src/containers/jumbotron.js":"6","/Users/patrick/Desktop/netflix/src/components/index.js":"7","/Users/patrick/Desktop/netflix/src/components/footer/index.js":"8","/Users/patrick/Desktop/netflix/src/components/footer/styles/footer.js":"9","/Users/patrick/Desktop/netflix/src/containers/footer.js":"10","/Users/patrick/Desktop/netflix/src/components/accordion/index.js":"11","/Users/patrick/Desktop/netflix/src/components/accordion/styles/accordion.js":"12","/Users/patrick/Desktop/netflix/src/containers/faqs.js":"13","/Users/patrick/Desktop/netflix/src/components/opt-form/index.js":"14","/Users/patrick/Desktop/netflix/src/components/opt-form/styles/opt-form.js":"15"},{"size":251,"mtime":1612379167952,"results":"16","hashOfConfig":"17"},{"size":327,"mtime":1612640127411,"results":"18","hashOfConfig":"17"},{"size":966,"mtime":1612379380526,"results":"19","hashOfConfig":"17"},{"size":1134,"mtime":1612379307567,"results":"20","hashOfConfig":"17"},{"size":336,"mtime":1612378870562,"results":"21","hashOfConfig":"17"},{"size":681,"mtime":1612379915724,"results":"22","hashOfConfig":"17"},{"size":199,"mtime":1612640055127,"results":"23","hashOfConfig":"17"},{"size":963,"mtime":1612458640858,"results":"24","hashOfConfig":"17"},{"size":961,"mtime":1612608981349,"results":"25","hashOfConfig":"17"},{"size":1554,"mtime":1612608947793,"results":"26","hashOfConfig":"17"},{"size":1450,"mtime":1612613555497,"results":"27","hashOfConfig":"17"},{"size":1795,"mtime":1612613487660,"results":"28","hashOfConfig":"17"},{"size":835,"mtime":1612640461126,"results":"29","hashOfConfig":"17"},{"size":748,"mtime":1612641085182,"results":"30","hashOfConfig":"17"},{"size":1203,"mtime":1612640545303,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"nwp4zr",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/patrick/Desktop/netflix/src/index.js",[],["64","65"],"/Users/patrick/Desktop/netflix/src/app.js",[],"/Users/patrick/Desktop/netflix/src/components/jumbotron/index.js",[],"/Users/patrick/Desktop/netflix/src/components/jumbotron/styles/jumbotron.js",[],"/Users/patrick/Desktop/netflix/src/global-styles.js",[],"/Users/patrick/Desktop/netflix/src/containers/jumbotron.js",[],"/Users/patrick/Desktop/netflix/src/components/index.js",[],"/Users/patrick/Desktop/netflix/src/components/footer/index.js",[],"/Users/patrick/Desktop/netflix/src/components/footer/styles/footer.js",[],"/Users/patrick/Desktop/netflix/src/containers/footer.js",[],"/Users/patrick/Desktop/netflix/src/components/accordion/index.js",["66"],"import React, { useState, useContext, createContext } from \"react\";\nimport {\n  Container,\n  Title,\n  Item,\n  Inner,\n  Header,\n  Body,\n} from \"./styles/accordion\";\n\nconst ToggleContext = createContext();\n\nexport default function Accordion({ children, ...restProps }) {\n  return (\n    <Container {...restProps}>\n      <Inner>{children}</Inner>\n    </Container>\n  );\n}\n\nAccordion.Title = function AccordionTitle({ children, ...restProps }) {\n  return <Title {...restProps}>{children}</Title>;\n};\n\nAccordion.Item = function AccordionItem({ children, ...restProps }) {\n  const [toggleShow, setToggleShow] = useState(false);\n\n  return (\n    <ToggleContext.Provider value={{ toggleShow, setToggleShow }}>\n      <Item {...restProps}>{children}</Item>;\n    </ToggleContext.Provider>\n  );\n};\n\nAccordion.Header = function AccordionHeader({ children, ...restProps }) {\n  const { toggleShow, setToggleShow } = useContext(ToggleContext);\n\n  return (\n    <Header\n      onClick={() => setToggleShow((toggleShow) => !toggleShow)}\n      {...restProps}\n    >\n      {children}\n      {toggleShow ? (\n        <img src=\"/images/icons/close-slim.png\" alt=\"Close\" />\n      ) : (\n        <img src=\"/images/icons/add.png\" alt=\"Open\" />\n      )}\n    </Header>\n  );\n};\n\nAccordion.Body = function AccordionBody({ children, ...restProps }) {\n  const { toggleShow, setToggleShow } = useContext(ToggleContext);\n  return toggleShow ? <Body {...restProps}>{children}</Body> : null;\n};\n","/Users/patrick/Desktop/netflix/src/components/accordion/styles/accordion.js",[],"/Users/patrick/Desktop/netflix/src/containers/faqs.js",[],"/Users/patrick/Desktop/netflix/src/components/opt-form/index.js",[],"/Users/patrick/Desktop/netflix/src/components/opt-form/styles/opt-form.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":54,"column":23,"nodeType":"73","messageId":"74","endLine":54,"endColumn":36},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'setToggleShow' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]